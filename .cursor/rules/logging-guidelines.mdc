---
description: 
globs: 
alwaysApply: true
---
# Logging Guidelines

## Debug Print Policy
- **AVOID** excessive debug prints that clutter the console
- **REMOVE** temporary debug prints after debugging is complete
- **NO** print statements for normal app flow or state changes

## Allowed Logging
Only use print statements for:

### Critical Errors
```swift
// ‚ùå BAD - Too verbose
print("üì± LibraryView.onAppear called - episodes count: \(episodeViewModel.episodes.count)")
print("üì± LibraryView: Initial load detected")
print("üì± LibraryView: Episodes count changed to \(episodeViewModel.episodes.count)")

// ‚úÖ GOOD - Critical errors only
print("‚ùå CRITICAL: Failed to load episodes from cache: \(error)")
print("‚ùå CRITICAL: Network request failed: \(error.localizedDescription)")
```

### Performance Issues
```swift
// ‚úÖ GOOD - Performance warnings
print("‚ö†Ô∏è PERFORMANCE: Tab switch took \(switchTime)s (threshold: 0.5s)")
print("‚ö†Ô∏è MEMORY: High memory usage detected: \(memoryUsage)MB")
```

### Data Corruption
```swift
// ‚úÖ GOOD - Data integrity issues
print("üö® DATA CORRUPTION: Episode cache is corrupted, rebuilding...")
print("üö® MIGRATION: User data migration failed, using defaults")
```

## Preferred Logging
Use proper logging frameworks instead of print:
- `Logger` from `os.log` for structured logging
- `NSLog` for system-level logging
- Custom logging service with log levels

## Files to Clean Up
Remove excessive prints from:
- [LibraryView.swift](mdc:Jimmy/Views/LibraryView.swift)
- [EpisodeViewModel.swift](mdc:Jimmy/ViewModels/EpisodeViewModel.swift)
- [UIPerformanceManager.swift](mdc:Jimmy/Services/UIPerformanceManager.swift)

## Exception
Keep existing critical error prints that help with crash debugging and data integrity issues.
